# For quickier rebuilds, we isolate each step of the installation
# and their requisites; together with docker cache

FROM corpusops/ubuntu:16.04_preprovision

# Rewarm apt cache
RUN bash -c "if egrep -qi \"ubuntu|mint|debian\" /etc/*-release 2>/dev/null;then\
      apt-get update -y -qq;fi"

# Be sure that system python is capable of SSL SNI connections
ARG NO_SILENT=
ADD roles/ /srv/corpusops/corpusops.bootstrap/roles/
ADD hacking/ /srv/corpusops/corpusops.bootstrap/hacking/
RUN bash -c 'step_rev=5;set -e;\
    silent() { VERSION=1 $COPS_ROOT/bin/silent_run "${@}"; };\
    silent $COPS_APPLY_ROLE -e "{cops_vars_debug: true}" \
      "${COPS_ROOT}/roles/corpusops.roles/localsettings_python_sni/role.yml"'

# Install docker client for dind(sibling via docker socket) workflows
RUN bash -c 'step_rev=2;set -e;\
    silent() { VERSION=1 $COPS_ROOT/bin/silent_run "${@}"; };\
    silent $COPS_APPLY_ROLE -e "{cops_vars_debug: true}" \
      "${COPS_ROOT}/roles/corpusops.roles/localsettings_docker/role.yml"'

# Make the docker image a preconfigured-for-production image
RUN bash -c 'step_rev=2;set -e;\
    silent() { VERSION=1 $COPS_ROOT/bin/silent_run "${@}"; };\
    silent $COPS_APPLY_ROLE -e "{cops_vars_debug: true}" \
      "${COPS_ROOT}/roles/corpusops.roles/playbooks/provision/server.yml"'

# pack any found git repo
RUN bash -c 'step_rev=3;set -e;\
    silent() { VERSION=1 $COPS_ROOT/bin/silent_run "${@}"; };\
    silent /sbin/cops_container_disable_networkifacesscripts.sh;\
    silent /sbin/cops_container_strip.sh'

# Default to launch systemd, and you ll have have to mount:
#  -v /sys/fs/cgroup:/sys/fs/cgroup:ro
STOPSIGNAL SIGRTMIN+3
CMD ["/entry_point"]
# vim:set et ft=Dockerfile:
