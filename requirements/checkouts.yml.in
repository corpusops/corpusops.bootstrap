- hosts: all
  vars:
    checkouts:
      - repo: '__CORPUSOPS_URL__'
        dest: '{{prefix}}'
        version: '__CORPUSOPS_BRANCH__'
      - repo: '__ANSIBLE_URL__'
        dest: '{{venv}}/src/ansible'
        recursive: yes
        version: '__ANSIBLE_BRANCH__'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.playbooks.git'
        dest: '{{prefix}}/playbooks'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.include_jinja_vars.git'
        dest: '{{prefix}}/roles/corpusops.include_jinja_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.saltcall.git'
        dest: '{{prefix}}/roles/corpusops.saltcall'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.humanlog.git'
        dest: '{{prefix}}/roles/corpusops.humanlog'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.debug.git'
        dest: '{{prefix}}/roles/corpusops.debug'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_locales.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_locales'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_locales_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_locales_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_locales.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_basepkgs'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_basepkgs_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_basepkgs_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_apparmor.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_apparmor'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_apparmor_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_apparmor_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_autoupgrades.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_autoupgrades'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_autoupgrades_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_autoupgrades_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_dns.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_dns'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_dns_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_dns_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_etckeeper.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_etckeeper'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_etckeeper_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_etckeeper_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_git.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_git'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_git_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_git_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_profile.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_profile'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_profile_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_profile_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_cron.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_cron'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_cron_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_cron_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_golang.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_golang'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_golang_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_golang_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_nscd.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_nscd'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_nscd_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_nscd_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_pkgmgr.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_pkgmgr'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_pkgmgr_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_pkgmgr_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_screen.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_screen'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_screen_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_screen_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_editor.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_editor'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_editor_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_editor_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_sudo.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_sudo'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_sudo_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_sudo_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_sysctls.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_sysctls'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.localsettings_sysctls_vars.git'
        dest: '{{prefix}}/roles/corpusops.localsettings_sysctls_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.services_base_ntp.git'
        dest: '{{prefix}}/roles/corpusops.services_base_ntp'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.services_base_ntp_vars.git'
        dest: '{{prefix}}/roles/corpusops.services_base_ntp_vars'
      - repo: '__CORPUSOPS_ORGA_URL__/corpusops.vars.git'
        dest: '{{prefix}}/roles/corpusops.vars'
  tasks:
    - git:
       accept_hostkey: yes
       repo: '{{item.repo}}'
       dest: '{{item.dest}}'
       version: '{{item.version|default(omit)}}'
       recursive: '{{item.recursive|default(omit)}}'
       update: no
      with_items: '{{checkouts}}'
    - shell: |
        set -ex
        if ! git remote show -n origin >/dev/null 2>&1;then
         git remote add origin '{{item.repo}}'
        else
         git config remote.origin.url '{{item.repo}}'
        fi
        {% set branch = item.get('version', '') %}
        get_branch () {
           git rev-parse --abbrev-ref HEAD | grep -v HEAD || \
           git describe --exact-match HEAD 2> /dev/null || \
           git rev-parse HEAD
        }
        curbr=$(get_branch)
        {% if branch %}
        if [ "x${curbr}" != "x{{branch}}" ];then
          git stash || /bin/true
          if git branch | sed -e 's/^\*\?\s\+//g' | egrep -q '^{{branch}}$';then
            echo "Using local branch {{branch}}"
            git checkout '{{branch}}'
          else
            echo "Checkout local branch {{branch}}"
            git checkout origin/{{branch}} -b '{{branch}}'
          fi
        fi
        git pull --ff-only origin '{{branch}}'
        {% else %}
        if [ "x${curbr}" = "x" ];then
          git pull --ff-only origin
        else
          git pull --ff-only origin ${curbr}
        fi
        {% endif %}
        if test -e .gitmodules;then
          echo "Upgrading submodules"
          git submodule update --recursive
        fi
      register: checkout
      changed_when: |
        {{"Checkout local branch" in checkout.stdout or
          "Using local branch" in checkout.stdout or
          "Already up-to-date." not in checkout.stdout}}
      args:
        chdir: '{{item.dest}}'
      with_items: '{{checkouts}}'

