#!/usr/bin/env bash
ensure_ansible_env() {
    if [[ -z "$A_ENV_NAME" ]];then
        log "Set ansible environment to use: \$A_ENV_NAME"
        exit 1
    fi
}
log() { echo "$@" >&2; }
vv() { log "($COPS_CWD) $@";"$@"; }
debug() { if [[ -n "${ADEBUG-}" ]];then log "$@";fi }
do_unset() {
    unset CORPUSOPS_URL
    unset CORPUSOPS_INSTALL_ARGS
    unset VAULT_PASSWORD_VARIABLES_PREFIX
    unset CORPUSOPS_UPDATE_ARGS
    unset A_GIT_PROJECT
    unset A_GIT_SERVER
    unset A_GIT_URL
    unset A_INVENTORY
    unset A_INVENTORY_FILE
    unset COPS_CWD
    unset COPS_ROOT
    unset NO_SILENT
    unset PLAYBOOK_PRE_ARGS
    unset PLAYBOOK_PRE_CUSTOM_ARGS
    unset SECRET_VAULT_PREFIX
    unset SECRET_VAULTS
}
set_vaultpwfiles() {
    vaultpwfiles=''
    debug "SECRET_VAULTS: $SECRET_VAULTS"
    for SECRET_VAULT in $SECRET_VAULTS;do
        vault=$(echo "$SECRET_VAULT"|awk -F@ '{print $1}')
        debug "Testing $vault"
        if [ -e $vault ];then
            log "-> Using vault: $vault"
            if "$AP" --help 2>&1|grep -q vault-id;then
                vaultpwfiles="--vault-id=$vault"
            else
                vaultpwfiles="--vault-password-file=$vault"
            fi
        else
            debug "No vault password found in $vault" >&2
        fi
    done
}
REUSE_ENV=${REUSE_ENV-}
debug "REUSE_ENV: $REUSE_ENV"
if [[ -z "$REUSE_ENV" ]];then
    debug "-> Clearing env"
    do_unset
fi
if [ -f .ansible/scripts/ansible_deploy_env.local ];then
    . .ansible/scripts/ansible_deploy_env.local
fi
export NONINTERACTIVE=${NONINTERACTIVE:-}
export COPS_CWD=${COPS_CWD:-${cops_cwd:-$(pwd)}}
export A_GIT_SERVER=${A_GIT_SERVER:-https://github.com}
DEFAULT_PLAYBOOK_PRE_ARGS="-v -e@.ansible/vaults/default.yml -e@.ansible/vaults/app.yml -e@local/corevars.yml"
DEFAULT_A_GIT_NAMESPACE=$(basename $(dirname $COPS_CWD))
DEFAULT_A_GIT_PROJECT=$(basename $COPS_CWD)
export A_GIT_PROJECT=${A_GIT_PROJECT-${DEFAULT_A_GIT_PROJECT}}
export A_GIT_NAMESPACE=${A_GIT_NAMESPACE-${DEFAULT_A_GIT_NAMESPACE}}
DEFAULT_A_GIT_URL=${A_GIT_SERVER}/${A_GIT_NAMESPACE}/${A_GIT_PROJECT}
export A_GIT_URL=${A_GIT_URL:-$DEFAULT_A_GIT_URL}
export A_VAULT_NAME=${A_VAULT_NAME-${A_ENV_NAME}}
DEFAULT_SECRET_VAULTS=""
for i in \
    "$HOME/.ansiblevault-$A_GIT_NAMESPACE.$A_GIT_PROJECT.$A_VAULT_NAME" \
    "$HOME/.ansiblevault-$A_GIT_NAMESPACE.$A_GIT_PROJECT"
do
    if [ -e "$i" ];then
        DEFAULT_SECRET_VAULTS="$DEFAULT_SECRET_VAULTS $i"
    fi
done
DEFAULT_SECRET_VAULT_PREFIX="$HOME/.ansiblevault-$A_GIT_NAMESPACE.$A_GIT_PROJECT"
DEFAULT_PLAYBOOK_PRE_CUSTOM_ARGS=""
for i in \
    .ansible/vaults/$A_VAULT_NAME.clear.yml \
    .ansible/vaults/$A_VAULT_NAME.yml
do
    if [ -e "$i" ];then
        DEFAULT_PLAYBOOK_PRE_CUSTOM_ARGS="$DEFAULT_PLAYBOOK_PRE_CUSTOM_ARGS -e@$i"
    fi
done
export VAULT_PASSWORD_VARIABLES_PREFIX=${VAULT_PASSWORD_VARIABLES_PREFIX:-CORPUSOPS_VAULT_PASSWORD_}
export CORPUSOPS_URL="${CORPUSOPS_URL:-https://github.com/corpusops/corpusops.bootstrap}"
export CORPUSOPS_INSTALL_ARGS=${CORPUSOPS_INSTALL_ARGS:-"-C -S"}
export CORPUSOPS_UPDATE_ARGS=${CORPUSOPS_UPDATE_ARGS:-"-C -s"}
export COPS_ROOT="${cops_path:-$COPS_CWD/local/corpusops.bootstrap}"
export COREVARS_VAULT="${CORE_VAULT:-"${COPS_CWD}/local/corevars.yml"}"
export COPS_PLAYBOOKS="${COPS_PLAYBOOKS:-${cops_playbooks:-"${COPS_ROOT}/playbooks/corpusops"}}"
export AP=${AP:-"$COPS_ROOT/bin/ansible-playbook"}
DEFAULT_A_INVENTORY_FILE="$COPS_CWD/.ansible/inventory_${A_ENV_NAME}"
export A_INVENTORY_FILE="${A_INVENTORY_FILE-${DEFAULT_A_INVENTORY_FILE}}"
A_INVENTORY_FILE_SUF=""
if [ -d $A_INVENTORY_FILE ];then
    A_INVENTORY_FILE_SUF=/
fi
DEFAULT_A_INVENTORY="-i ${A_INVENTORY_FILE}${A_INVENTORY_FILE_SUF}"
export A_INVENTORY="${A_INVENTORY-${DEFAULT_A_INVENTORY}}"
export SECRET_VAULTS="${SECRET_VAULTS-$DEFAULT_SECRET_VAULTS}"
export SECRET_VAULT_PREFIX="${SECRET_VAULT_PREFIX-${DEFAULT_SECRET_VAULT_PREFIX}}"
export PLAYBOOK_PRE_ARGS="${PLAYBOOK_PRE_ARGS-$DEFAULT_PLAYBOOK_PRE_ARGS}"
export PLAYBOOK_PRE_CUSTOM_ARGS="${PLAYBOOK_PRE_CUSTOM_ARGS-$DEFAULT_PLAYBOOK_PRE_CUSTOM_ARGS}"
export NO_SILENT=${NO_SILENT-1}
export PATH=$COPS_ROOT/bin:$COPS_ROOT/venv/bin:$PATH
