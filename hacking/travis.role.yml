---
sudo: required
dist: trusty
env:
  matrix:
    - FORCE_REPULL="y" IMAGES="ubuntu:16.04_preprovision"
    - FORCE_REPULL="y" IMAGES="ubuntu:14.04_preprovision"
    - FORCE_REPULL="y" IMAGES="ubuntu:latest_preprovision"
language: python
python: "2.7"
before_install:
  - sudo apt-get update -qq
install:
  - |
    set -e;
    for i in $(echo "$IMAGES ubuntu:14.04"|xargs -n1|sort -u);do
     img="corpusops/$i"
     echo "docker pull $img"
     sudo docker pull "$img"
    done
  - |
    set -e;
    docker=$(which docker)
    sudo docker run -d --name=copstestrunner \
      $( while read v; do echo " -v ${v}:${v}:ro";done < \
              <( ldd "${docker}"|awk '{print $3}'|egrep '^/'; )
      )\
      -v "${docker}:${docker}" \
      -v "/sys/fs/cgroup:/sys/fs/cgroup:ro" \
      -v "/var/lib/docker:/var/lib/docker" \
      -v "/var/run/docker:/var/run/docker" \
      -v "/var/run/docker.sock:/var/run/docker.sock" \
      -v "/:/HOST_ROOTFS" \
      -v "$PWD:$PWD" \
      -e IMAGES="$IMAGES" \
      "corpusops/ubuntu:14.04" bash -c 'while true;do sleep 65200;done'
script:
  # Either test on docker if possible
  # Or directly on travis compute node
  - |
    if [ -e .travis.env ];then . .travis.env;fi
    co=/srv/corpusops/corpusops.bootstrap
    role=$(pwd)
    rolename=$(basename $role)
    cd ..
    roles=$(pwd)
    roled=$(basename $roles)
    if echo $rolesd | egrep -q '^roles?';then cd ..;fi
    ret=666
    set +e
    set -x
    if [ "x${NO_DOCKER_TEST-}" = "x" ]; then
      if ! sudo docker exec copstestrunner bash -c \
       "
       if ! $co/hacking/test_roles "'"'"${role}"'"'"; then
         echo 'First test try failed, try to update code and retry test' >&2;
         $co/bin/install.sh -s && $co/hacking/test_roles "'"'"${role}"'"'"
       fi"; then
        ret=1;
      else
        ret=0;
      fi
    else
      echo 'NO_DOCKER_TEST is set, skip tests in docker' >&2
    fi
    if [ "x${ret}" != "x0" ]; then
      if ! ( sudo docker cp copstestrunner:/srv/corpusops /srv/corpusops && sudo $co/bin/install.sh -C -S; ); then
        ret=3
      else
        if ! sudo $co/hacking/test_roles "${role}"; then
          echo 'BM: First test try failed, try to update code and retry test' >&2;
          sudo $co/bin/install.sh -s;
          if ! sudo $co/hacking/test_roles "${role}";then
            ret=2;
          else
            ret=0;
          fi
        else
          ret=0;
        fi
      fi
    fi
    exit ${ret}
