#!/usr/bin/env bash
ROLEPATH=${ROLEPATH:-${1:-__ROLEPATH__}}
if [[ -n ${1} ]];then
    ROLEWD=${ROLEWD:-${2:-$(cd $1/.. && pwd)}}
    COPS_ROOT=${COPS_ROOT:-${3:-$(cd $1/../.. && pwd)}}
fi
ROLEWD=${ROLEWD:-__ROLES_WD__}
COPS_ROOT=${COPS_ROOT:-__COPS_ROOT__}
crole="${crole:-${COPS_ROOT}/bin/cops_apply_role -vvvv}"
cd "${COPS_ROOT}"
COPS_DEPS_ROLES="${COPS_DEPS_ROLES:-corpusops.localsettings_pkgmgr}"
README="$ROLEPATH/README.md"
if [ -e "${README}" ];then
  for i in $(grep "role roles dependencies:" "${README}" \
                |sed -re "s/.*cops roles dependencies:\s*//g"\
                |sed -re "s/(,| - )//g");do
    COPS_DEPS_ROLES="${COPS_DEPS_ROLES} ${i}"
  done
fi
for i in $COPS_DEPS_ROLES;do
    if ! ( $crole "roles/${i}/role.yml" );then
        echo "roles/${i}/role.yml failed"
        exit 4
    fi
done
cd "${ROLEWD}"
ret=0
for test_role_file in test.yml role.yml;do
    ftest_role_file="${ROLEPATH}/${test_role_file}"
    if [ -e "${ftest_role_file}" ]; then
        roles=$(cd "$ROLEPATH/.." && pwd)
        if [[ -z ${ANSIBLE_ROLES_PATH-} ]]; then
            export ANSIBLE_ROLES_PATH="${roles}"
        else
            export ANSIBLE_ROLES_PATH="${roles}:${ANSIBLE_ROLES_PATH}"
        fi
        ${crole} "${ftest_role_file}"
        ret=${?}
        if [ "x${ret}" != "x0" ];then
            echo "$ROLEPATH test failed"
        else
            echo "$ROLEPATH test success"
        fi
        break
    fi
done
exit ${ret}
# vim:set ft=sh et:
